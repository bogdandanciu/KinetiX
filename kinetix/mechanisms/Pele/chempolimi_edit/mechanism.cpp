#include "mechanism.H"
const int rmap[1231] = {
    36,   37,   48,   64,   65,   72,   73,   176,  177,  186,  187,  286,
    287,  305,  309,  397,  398,  426,  496,  509,  545,  1027, 49,   59,
    78,   80,   125,  163,  423,  465,  626,  693,  777,  900,  983,  6,
    27,   28,   29,   30,   31,   32,   38,   57,   75,   82,   83,   89,
    97,   98,   102,  108,  109,  116,  117,  126,  140,  178,  188,  249,
    250,  251,  261,  274,  276,  294,  295,  332,  333,  334,  364,  378,
    379,  386,  410,  411,  481,  513,  566,  643,  659,  670,  671,  776,
    787,  891,  892,  1021, 1025, 1026, 1062, 1086, 1119, 1182, 1197, 0,
    1,    2,    3,    4,    5,    7,    8,    9,    10,   11,   12,   13,
    14,   15,   16,   17,   18,   19,   20,   21,   22,   23,   24,   25,
    26,   33,   34,   35,   39,   40,   41,   42,   43,   44,   45,   46,
    47,   50,   51,   52,   53,   54,   55,   56,   58,   60,   61,   62,
    63,   66,   67,   68,   69,   70,   71,   74,   76,   77,   79,   81,
    84,   85,   86,   87,   88,   90,   91,   92,   93,   94,   95,   96,
    99,   100,  101,  103,  104,  105,  106,  107,  110,  111,  112,  113,
    114,  115,  118,  119,  120,  121,  122,  123,  124,  127,  128,  129,
    130,  131,  132,  133,  134,  135,  136,  137,  138,  139,  141,  142,
    143,  144,  145,  146,  147,  148,  149,  150,  151,  152,  153,  154,
    155,  156,  157,  158,  159,  160,  161,  162,  164,  165,  166,  167,
    168,  169,  170,  171,  172,  173,  174,  175,  179,  180,  181,  182,
    183,  184,  185,  189,  190,  191,  192,  193,  194,  195,  196,  197,
    198,  199,  200,  201,  202,  203,  204,  205,  206,  207,  208,  209,
    210,  211,  212,  213,  214,  215,  216,  217,  218,  219,  220,  221,
    222,  223,  224,  225,  226,  227,  228,  229,  230,  231,  232,  233,
    234,  235,  236,  237,  238,  239,  240,  241,  242,  243,  244,  245,
    246,  247,  248,  252,  253,  254,  255,  256,  257,  258,  259,  260,
    262,  263,  264,  265,  266,  267,  268,  269,  270,  271,  272,  273,
    275,  277,  278,  279,  280,  281,  282,  283,  284,  285,  288,  289,
    290,  291,  292,  293,  296,  297,  298,  299,  300,  301,  302,  303,
    304,  306,  307,  308,  310,  311,  312,  313,  314,  315,  316,  317,
    318,  319,  320,  321,  322,  323,  324,  325,  326,  327,  328,  329,
    330,  331,  335,  336,  337,  338,  339,  340,  341,  342,  343,  344,
    345,  346,  347,  348,  349,  350,  351,  352,  353,  354,  355,  356,
    357,  358,  359,  360,  361,  362,  363,  365,  366,  367,  368,  369,
    370,  371,  372,  373,  374,  375,  376,  377,  380,  381,  382,  383,
    384,  385,  387,  388,  389,  390,  391,  392,  393,  394,  395,  396,
    399,  400,  401,  402,  403,  404,  405,  406,  407,  408,  409,  412,
    413,  414,  415,  416,  417,  418,  419,  420,  421,  422,  424,  425,
    427,  428,  429,  430,  431,  432,  433,  434,  435,  436,  437,  438,
    439,  440,  441,  442,  443,  444,  445,  446,  447,  448,  449,  450,
    451,  452,  453,  454,  455,  456,  457,  458,  459,  460,  461,  462,
    463,  464,  466,  467,  468,  469,  470,  471,  472,  473,  474,  475,
    476,  477,  478,  479,  480,  482,  483,  484,  485,  486,  487,  488,
    489,  490,  491,  492,  493,  494,  495,  497,  498,  499,  500,  501,
    502,  503,  504,  505,  506,  507,  508,  510,  511,  512,  514,  515,
    516,  517,  518,  519,  520,  521,  522,  523,  524,  525,  526,  527,
    528,  529,  530,  531,  532,  533,  534,  535,  536,  537,  538,  539,
    540,  541,  542,  543,  544,  546,  547,  548,  549,  550,  551,  552,
    553,  554,  555,  556,  557,  558,  559,  560,  561,  562,  563,  564,
    565,  567,  568,  569,  570,  571,  572,  573,  574,  575,  576,  577,
    578,  579,  580,  581,  582,  583,  584,  585,  586,  587,  588,  589,
    590,  591,  592,  593,  594,  595,  596,  597,  598,  599,  600,  601,
    602,  603,  604,  605,  606,  607,  608,  609,  610,  611,  612,  613,
    614,  615,  616,  617,  618,  619,  620,  621,  622,  623,  624,  625,
    627,  628,  629,  630,  631,  632,  633,  634,  635,  636,  637,  638,
    639,  640,  641,  642,  644,  645,  646,  647,  648,  649,  650,  651,
    652,  653,  654,  655,  656,  657,  658,  660,  661,  662,  663,  664,
    665,  666,  667,  668,  669,  672,  673,  674,  675,  676,  677,  678,
    679,  680,  681,  682,  683,  684,  685,  686,  687,  688,  689,  690,
    691,  692,  694,  695,  696,  697,  698,  699,  700,  701,  702,  703,
    704,  705,  706,  707,  708,  709,  710,  711,  712,  713,  714,  715,
    716,  717,  718,  719,  720,  721,  722,  723,  724,  725,  726,  727,
    728,  729,  730,  731,  732,  733,  734,  735,  736,  737,  738,  739,
    740,  741,  742,  743,  744,  745,  746,  747,  748,  749,  750,  751,
    752,  753,  754,  755,  756,  757,  758,  759,  760,  761,  762,  763,
    764,  765,  766,  767,  768,  769,  770,  771,  772,  773,  774,  775,
    778,  779,  780,  781,  782,  783,  784,  785,  786,  788,  789,  790,
    791,  792,  793,  794,  795,  796,  797,  798,  799,  800,  801,  802,
    803,  804,  805,  806,  807,  808,  809,  810,  811,  812,  813,  814,
    815,  816,  817,  818,  819,  820,  821,  822,  823,  824,  825,  826,
    827,  828,  829,  830,  831,  832,  833,  834,  835,  836,  837,  838,
    839,  840,  841,  842,  843,  844,  845,  846,  847,  848,  849,  850,
    851,  852,  853,  854,  855,  856,  857,  858,  859,  860,  861,  862,
    863,  864,  865,  866,  867,  868,  869,  870,  871,  872,  873,  874,
    875,  876,  877,  878,  879,  880,  881,  882,  883,  884,  885,  886,
    887,  888,  889,  890,  893,  894,  895,  896,  897,  898,  899,  901,
    902,  903,  904,  905,  906,  907,  908,  909,  910,  911,  912,  913,
    914,  915,  916,  917,  918,  919,  920,  921,  922,  923,  924,  925,
    926,  927,  928,  929,  930,  931,  932,  933,  934,  935,  936,  937,
    938,  939,  940,  941,  942,  943,  944,  945,  946,  947,  948,  949,
    950,  951,  952,  953,  954,  955,  956,  957,  958,  959,  960,  961,
    962,  963,  964,  965,  966,  967,  968,  969,  970,  971,  972,  973,
    974,  975,  976,  977,  978,  979,  980,  981,  982,  984,  985,  986,
    987,  988,  989,  990,  991,  992,  993,  994,  995,  996,  997,  998,
    999,  1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
    1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023,
    1024, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
    1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
    1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063,
    1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
    1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088,
    1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
    1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
    1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125,
    1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
    1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149,
    1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
    1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
    1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1183, 1184, 1185, 1186,
    1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199,
    1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
    1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
    1224, 1225, 1226, 1227, 1228, 1229, 1230};

// Returns 0-based map of reaction order
void GET_RMAP(int *_rmap) {
  for (int j = 0; j < 1231; ++j) {
    _rmap[j] = rmap[j];
  }
}

// Returns a count of species in a reaction, and their indices
// and stoichiometric coefficients. (Eq 50)
void CKINU(const int i, int &nspec, int ki[], int nu[]) {
  const int ns[1231] = {
      4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 3, 3, 2, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4,
      4, 4, 2, 2, 2, 2, 2, 3, 3, 4, 4, 3, 3, 3, 4, 3, 4, 4, 4, 3, 4, 3, 3, 2, 2,
      4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 4, 3, 4, 4, 3, 3, 4, 4, 3, 4, 3, 3, 3, 3, 3,
      3, 4, 3, 2, 4, 3, 3, 2, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4,
      4, 3, 3, 4, 4, 4, 4, 3, 3, 2, 4, 4, 4, 4, 4, 3, 3, 3, 4, 4, 4, 4, 4, 3, 3,
      2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3,
      4, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
      4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3,
      3, 2, 4, 4, 4, 4, 4, 4, 4, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3,
      4, 3, 4, 4, 4, 4, 4, 4, 5, 3, 3, 3, 3, 4, 4, 4, 4, 3, 4, 3, 3, 4, 4, 4, 4,
      4, 4, 4, 4, 3, 2, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4,
      3, 3, 3, 3, 4, 4, 3, 3, 3, 2, 5, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 3, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
      4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4,
      4, 5, 4, 4, 4, 4, 4, 4, 3, 4, 3, 3, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 3, 4,
      4, 3, 5, 4, 4, 4, 4, 4, 4, 3, 4, 4, 3, 4, 4, 4, 3, 4, 4, 4, 4, 3, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 3, 4, 5, 4, 4, 4, 4, 4, 4, 4,
      4, 4, 3, 5, 4, 4, 3, 5, 4, 4, 4, 4, 5, 4, 4, 4, 4, 3, 3, 4, 4, 3, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4,
      4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 4, 3, 4, 4, 4, 4,
      4, 4, 4, 5, 4, 3, 3, 4, 3, 4, 4, 4, 4, 3, 4, 4, 3, 4, 4, 4, 4, 4, 4, 3, 4,
      2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 3, 4, 3, 4, 4, 4, 4, 4, 4, 3, 4,
      4, 3, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 3, 4, 5, 5, 5, 3, 3, 3, 3, 4, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 3, 4, 4, 4, 4, 4, 4, 4, 2, 3, 3, 2, 3, 3, 3,
      4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 2, 3, 3, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 3, 4, 3, 3, 3, 3, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 2, 3, 3, 3, 3,
      4, 4, 4, 4, 3, 4, 4, 5, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 5, 4, 5, 4, 4,
      4, 3, 2, 4, 5, 4, 4, 4, 3, 3, 4, 4, 3, 5, 4, 5, 4, 4, 4, 4, 4, 5, 3, 4, 4,
      4, 4, 4, 4, 5, 5, 4, 4, 4, 4, 4, 3, 4, 5, 4, 4, 3, 2, 2, 3, 3, 4, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 3, 3,
      4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4,
      4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 4, 4, 4, 4, 3, 3, 2,
      3, 4, 4, 3, 4, 4, 3, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4,
      4, 3, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 3, 4, 4, 3, 3, 4, 4, 4, 4, 4, 2,
      4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 3, 4, 4, 3,
      4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4,
      4, 3, 4, 5, 5, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4,
      3, 2, 3, 4, 4, 4, 5, 4, 4, 5, 4, 5, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 4, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
      4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4,
      4, 4, 4, 4, 4, 3, 4, 4, 5, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
      4, 4, 4, 4, 5, 4};
  const int kiv[6155] = {
      38,  94,  63,  107, 0,   59,  98,  107, 114, 0,   59,  98,  107, 114, 0,
      59,  108, 61,  107, 0,   18,  94,  61,  107, 0,   38,  94,  77,  0,   0,
      77,  63,  107, 0,   0,   77,  117, 72,  114, 0,   77,  117, 108, 109, 0,
      77,  117, 59,  80,  0,   77,  120, 69,  107, 0,   77,  118, 83,  107, 0,
      107, 59,  93,  0,   0,   107, 0,   94,  0,   0,   107, 60,  0,   0,   0,
      63,  107, 72,  93,  0,   107, 117, 59,  114, 0,   107, 117, 61,  94,  0,
      107, 117, 93,  108, 0,   93,  107, 59,  94,  0,   0,   107, 59,  0,   0,
      107, 120, 72,  114, 0,   107, 120, 72,  114, 0,   107, 118, 108, 114, 0,
      38,  107, 59,  72,  0,   59,  107, 17,  93,  0,   39,  107, 59,  66,  0,
      63,  64,  0,   0,   0,   63,  64,  0,   0,   0,   63,  64,  0,   0,   0,
      63,  64,  0,   0,   0,   117, 118, 0,   0,   0,   63,  117, 120, 0,   0,
      64,  118, 120, 0,   0,   64,  117, 63,  120, 0,   63,  118, 117, 120, 0,
      63,  118, 83,  0,   0,   63,  118, 83,  0,   0,   63,  120, 69,  0,   0,
      64,  120, 63,  69,  0,   120, 69,  117, 0,   0,   83,  120, 69,  118, 0,
      83,  117, 118, 120, 0,   63,  83,  64,  118, 0,   63,  83,  120, 0,   0,
      63,  83,  69,  117, 0,   83,  70,  118, 0,   0,   83,  70,  118, 0,   0,
      120, 70,  0,   0,   0,   120, 70,  0,   0,   0,   70,  120, 69,  83,  0,
      70,  120, 69,  83,  0,   63,  70,  64,  83,  0,   63,  70,  69,  120, 0,
      70,  117, 83,  120, 0,   94,  117, 93,  114, 0,   93,  118, 114, 117, 0,
      114, 93,  117, 0,   0,   114, 94,  118, 0,   0,   98,  94,  117, 0,   0,
      98,  117, 94,  118, 0,   98,  117, 114, 0,   0,   93,  98,  94,  114, 0,
      98,  114, 94,  115, 0,   114, 117, 115, 0,   0,   114, 117, 115, 0,   0,
      115, 117, 114, 118, 0,   93,  115, 98,  117, 0,   93,  115, 114, 0,   0,
      114, 115, 98,  118, 0,   115, 114, 118, 0,   0,   115, 114, 116, 0,   0,
      115, 117, 116, 0,   0,   115, 117, 116, 0,   0,   116, 114, 118, 0,   0,
      116, 114, 118, 0,   0,   116, 117, 115, 118, 0,   116, 115, 118, 0,   0,
      100, 115, 0,   0,   0,   100, 117, 99,  118, 0,   114, 115, 99,  0,   0,
      99,  117, 115, 0,   0,   94,  93,  0,   0,   0,   109, 63,  93,  0,   0,
      63,  109, 64,  93,  0,   93,  109, 63,  94,  0,   109, 63,  113, 0,   0,
      109, 93,  110, 0,   0,   109, 64,  94,  0,   0,   110, 63,  109, 0,   0,
      64,  109, 63,  110, 0,   93,  110, 63,  94,  0,   109, 110, 63,  95,  0,
      109, 110, 93,  112, 0,   109, 112, 110, 0,   0,   110, 64,  95,  0,   0,
      63,  96,  110, 0,   0,   112, 63,  110, 0,   0,   112, 64,  109, 0,   0,
      63,  112, 64,  110, 0,   110, 112, 64,  96,  0,   113, 63,  94,  0,   0,
      113, 63,  94,  0,   0,   63,  113, 64,  94,  0,   93,  113, 94,  109, 0,
      109, 113, 94,  110, 0,   110, 113, 94,  112, 0,   113, 94,  95,  0,   0,
      95,  63,  113, 0,   0,   95,  109, 0,   0,   0,   63,  95,  64,  113, 0,
      93,  95,  109, 113, 0,   95,  109, 110, 113, 0,   95,  110, 112, 113, 0,
      96,  109, 95,  110, 0,   96,  113, 95,  0,   0,   96,  109, 110, 0,   0,
      96,  63,  95,  0,   0,   63,  96,  64,  95,  0,   63,  96,  109, 112, 0,
      93,  96,  95,  109, 0,   96,  110, 95,  112, 0,   95,  96,  97,  113, 0,
      96,  94,  112, 0,   0,   96,  95,  97,  0,   0,   97,  110, 0,   0,   0,
      97,  63,  96,  0,   0,   63,  97,  64,  96,  0,   63,  97,  110, 112, 0,
      93,  97,  96,  109, 0,   97,  109, 96,  110, 0,   97,  110, 96,  112, 0,
      93,  120, 63,  114, 0,   63,  98,  94,  120, 0,   63,  98,  109, 114, 0,
      63,  98,  113, 117, 0,   63,  98,  79,  0,   0,   98,  120, 83,  94,  0,
      80,  114, 98,  120, 0,   80,  114, 79,  115, 0,   109, 114, 79,  0,   0,
      63,  79,  64,  98,  0,   63,  79,  110, 114, 0,   79,  117, 98,  120, 0,
      79,  120, 69,  98,  0,   79,  120, 82,  114, 0,   79,  114, 85,  94,  0,
      79,  114, 113, 115, 0,   79,  114, 80,  98,  0,   79,  115, 85,  98,  0,
      79,  115, 113, 116, 0,   63,  115, 114, 120, 0,   115, 120, 83,  114, 0,
      83,  115, 85,  118, 0,   64,  115, 63,  85,  0,   109, 115, 98,  120, 0,
      109, 115, 80,  114, 0,   63,  116, 115, 120, 0,   116, 120, 83,  115, 0,
      83,  116, 81,  118, 0,   83,  116, 115, 118, 120, 69,  100, 81,  85,  0,
      69,  99,  85,  0,   0,   63,  114, 80,  0,   0,   63,  80,  64,  114, 0,
      80,  120, 69,  114, 0,   80,  117, 114, 120, 0,   80,  117, 63,  115, 0,
      80,  118, 83,  114, 0,   80,  93,  109, 114, 0,   80,  93,  63,  98,  0,
      80,  109, 110, 114, 0,   80,  110, 112, 114, 0,   80,  69,  98,  0,   0,
      80,  82,  114, 0,   0,   80,  115, 85,  114, 0,   114, 120, 85,  0,   0,
      114, 120, 85,  0,   0,   63,  115, 85,  0,   0,   63,  85,  80,  120, 0,
      63,  85,  69,  114, 0,   85,  117, 115, 120, 0,   85,  120, 69,  115, 0,
      85,  109, 110, 115, 0,   85,  69,  114, 115, 0,   85,  110, 112, 115, 0,
      115, 120, 81,  0,   0,   115, 120, 81,  0,   0,   83,  114, 81,  0,   0,
      63,  81,  64,  116, 0,   63,  81,  69,  115, 0,   63,  81,  85,  120, 0,
      81,  120, 69,  116, 0,   112, 117, 110, 120, 0,   112, 120, 69,  110, 0,
      83,  112, 70,  110, 0,   83,  110, 112, 118, 0,   110, 117, 64,  114, 0,
      110, 117, 63,  80,  0,   110, 117, 109, 120, 0,   110, 120, 69,  109, 0,
      110, 120, 111, 0,   0,   83,  110, 69,  80,  0,   83,  110, 68,  120, 0,
      110, 118, 80,  120, 0,   110, 118, 68,  117, 0,   110, 114, 113, 120, 0,
      110, 114, 69,  94,  0,   110, 114, 64,  98,  0,   110, 115, 69,  98,  0,
      110, 115, 68,  114, 0,   109, 117, 63,  114, 0,   109, 117, 93,  120, 0,
      109, 120, 63,  80,  0,   109, 120, 69,  93,  0,   109, 120, 64,  114, 0,
      83,  109, 80,  120, 0,   109, 118, 80,  117, 0,   109, 118, 114, 120, 0,
      69,  109, 64,  80,  0,   98,  109, 80,  94,  0,   113, 117, 109, 114, 0,
      109, 114, 94,  120, 0,   97,  117, 69,  95,  0,   97,  117, 96,  120, 0,
      97,  120, 69,  96,  0,   97,  120, 68,  112, 0,   83,  97,  70,  96,  0,
      96,  117, 95,  120, 0,   96,  117, 69,  113, 0,   96,  117, 80,  110, 0,
      96,  120, 69,  95,  0,   96,  120, 80,  112, 0,   96,  118, 83,  95,  0,
      83,  96,  70,  95,  0,   83,  96,  97,  118, 0,   96,  114, 80,  95,  0,
      95,  117, 110, 114, 0,   95,  117, 113, 120, 0,   95,  120, 69,  113, 0,
      83,  95,  70,  113, 0,   95,  114, 98,  110, 0,   113, 117, 94,  120, 0,
      113, 120, 69,  94,  0,   113, 118, 83,  94,  0,   113, 118, 98,  120, 0,
      83,  113, 70,  94,  0,   113, 114, 80,  94,  0,   111, 120, 69,  82,  0,
      68,  64,  114, 0,   0,   68,  63,  80,  0,   0,   68,  82,  0,   0,   0,
      63,  68,  64,  80,  0,   63,  68,  110, 120, 0,   68,  117, 80,  120, 0,
      68,  120, 69,  80,  0,   68,  83,  70,  80,  0,   68,  110, 80,  112, 0,
      68,  118, 80,  83,  0,   68,  114, 80,  0,   0,   68,  115, 80,  85,  0,
      82,  63,  80,  0,   0,   63,  82,  64,  80,  0,   63,  82,  110, 120, 0,
      82,  117, 80,  120, 0,   82,  117, 80,  120, 0,   82,  120, 69,  80,  0,
      82,  83,  70,  80,  0,   82,  110, 80,  112, 0,   82,  115, 80,  85,  0,
      82,  118, 80,  83,  0,   80,  82,  111, 114, 0,   61,  83,  62,  120, 0,
      61,  120, 62,  63,  0,   61,  117, 62,  0,   0,   61,  118, 62,  117, 0,
      76,  61,  63,  0,   0,   76,  120, 61,  69,  0,   76,  117, 61,  120, 0,
      76,  117, 62,  63,  0,   63,  76,  61,  64,  0,   76,  118, 61,  83,  0,
      45,  76,  58,  61,  0,   76,  83,  62,  63,  120, 76,  43,  61,  0,   0,
      76,  61,  64,  0,   0,   58,  45,  63,  0,   0,   58,  45,  63,  0,   0,
      58,  83,  45,  70,  0,   58,  120, 45,  69,  0,   58,  117, 45,  120, 0,
      58,  63,  45,  64,  0,   39,  58,  45,  0,   0,   58,  118, 45,  83,  0,
      45,  39,  63,  0,   0,   45,  38,  64,  0,   0,   45,  83,  54,  120, 0,
      45,  120, 44,  63,  0,   45,  120, 54,  63,  0,   45,  120, 39,  69,  0,
      45,  120, 43,  64,  0,   45,  117, 43,  63,  0,   45,  118, 43,  120, 0,
      45,  118, 54,  117, 0,   45,  9,   63,  0,   0,   45,  16,  0,   0,   0,
      45,  54,  43,  58,  0,   44,  45,  43,  58,  0,   45,  63,  64,  125, 0,
      45,  118, 55,  0,   0,   45,  7,   64,  0,   0,   45,  120, 69,  125, 0,
      39,  120, 43,  63,  0,   39,  117, 61,  64,  0,   39,  117, 61,  63,  0,
      39,  117, 38,  120, 0,   39,  117, 63,  76,  0,   39,  63,  38,  64,  0,
      39,  118, 76,  120, 0,   39,  118, 62,  64,  0,   39,  118, 62,  63,  0,
      39,  118, 61,  69,  0,   39,  118, 61,  63,  120, 39,  118, 43,  117, 0,
      39,  62,  43,  61,  0,   39,  4,   64,  0,   0,   39,  4,   63,  0,   0,
      39,  38,  45,  0,   0,   39,  5,   63,  0,   0,   39,  45,  7,   63,  0,
      38,  39,  4,   63,  0,   0,   39,  38,  0,   0,   39,  0,   64,  0,   0,
      39,  38,  63,  0,   0,   125, 39,  0,   0,   0,   118, 125, 61,  63,  120,
      63,  125, 38,  64,  0,   117, 125, 61,  63,  0,   117, 125, 61,  64,  0,
      120, 125, 43,  63,  0,   83,  125, 43,  120, 0,   70,  125, 54,  120, 0,
      69,  125, 57,  0,   0,   43,  125, 45,  76,  0,   76,  125, 45,  61,  0,
      45,  125, 7,   63,  0,   58,  125, 45,  0,   0,   16,  125, 9,   45,  0,
      62,  125, 43,  61,  0,   41,  125, 7,   61,  0,   38,  120, 63,  76,  0,
      38,  117, 61,  63,  0,   38,  117, 0,   120, 0,   0,   69,  38,  120, 0,
      38,  118, 76,  117, 0,   38,  118, 61,  120, 0,   38,  62,  61,  76,  0,
      38,  58,  7,   63,  0,   38,  45,  5,   63,  0,   39,  120, 38,  69,  0,
      38,  63,  0,   64,  0,   38,  69,  43,  63,  0,   38,  69,  44,  0,   0,
      38,  43,  41,  63,  0,   54,  43,  63,  0,   0,   54,  83,  43,  70,  0,
      54,  120, 43,  69,  0,   54,  117, 43,  120, 0,   54,  63,  43,  64,  0,
      54,  118, 43,  83,  0,   43,  54,  57,  76,  0,   54,  61,  45,  62,  0,
      54,  76,  57,  61,  0,   9,   54,  16,  43,  0,   5,   54,  7,   43,  0,
      7,   54,  9,   43,  0,   54,  63,  44,  63,  0,   54,  63,  69,  125, 0,
      43,  63,  76,  0,   0,   43,  61,  64,  0,   0,   43,  83,  70,  76,  0,
      43,  120, 69,  76,  0,   43,  117, 76,  120, 0,   43,  63,  64,  76,  0,
      43,  118, 76,  83,  0,   43,  45,  58,  76,  0,   16,  9,   63,  0,   0,
      16,  83,  9,   70,  0,   16,  120, 9,   69,  0,   16,  117, 9,   120, 0,
      16,  63,  9,   64,  0,   16,  63,  45,  58,  0,   16,  118, 9,   83,  0,
      16,  45,  9,   58,  0,   16,  39,  9,   45,  0,   5,   16,  7,   9,   0,
      16,  76,  9,   43,  0,   9,   7,   63,  0,   0,   9,   7,   63,  0,   0,
      9,   83,  7,   70,  0,   9,   120, 7,   69,  0,   9,   120, 43,  45,  63,
      9,   117, 43,  45,  0,   9,   117, 46,  63,  0,   9,   117, 7,   120, 0,
      9,   63,  7,   64,  0,   9,   118, 7,   83,  0,   9,   45,  7,   58,  0,
      9,   7,   16,  0,   0,   9,   83,  12,  120, 0,   7,   4,   64,  0,   0,
      7,   5,   63,  0,   0,   7,   120, 5,   69,  0,   7,   117, 45,  76,  0,
      7,   63,  5,   64,  0,   7,   118, 5,   83,  0,   7,   5,   9,   0,   0,
      7,   45,  5,   58,  0,   7,   117, 42,  63,  0,   7,   117, 39,  43,  0,
      7,   117, 41,  64,  0,   7,   117, 5,   120, 0,   7,   120, 43,  45,  0,
      7,   120, 121, 0,   0,   7,   83,  5,   70,  0,   7,   54,  5,   57,  0,
      5,   4,   63,  0,   0,   5,   83,  45,  61,  120, 5,   120, 4,   69,  0,
      5,   63,  4,   64,  0,   5,   117, 45,  61,  0,   5,   118, 43,  76,  0,
      5,   38,  4,   39,  0,   5,   45,  4,   58,  0,   3,   5,   4,   0,   0,
      5,   76,  7,   61,  0,   5,   43,  7,   76,  0,   5,   4,   7,   0,   0,
      5,   117, 4,   120, 0,   5,   117, 39,  76,  0,   5,   117, 41,  63,  0,
      5,   120, 46,  0,   0,   5,   118, 4,   83,  0,   5,   118, 4,   83,  0,
      5,   118, 42,  117, 0,   5,   39,  4,   45,  0,   4,   3,   63,  0,   0,
      4,   118, 71,  120, 0,   4,   118, 3,   83,  0,   4,   120, 3,   69,  0,
      4,   120, 41,  63,  0,   4,   117, 39,  61,  0,   4,   117, 63,  71,  0,
      4,   45,  3,   58,  0,   4,   117, 3,   120, 0,   4,   120, 45,  61,  0,
      4,   83,  41,  120, 0,   4,   118, 76,  0,   0,   3,   120, 63,  71,  0,
      3,   120, 1,   69,  0,   3,   117, 38,  61,  0,   3,   118, 61,  76,  0,
      3,   64,  4,   63,  0,   3,   118, 61,  63,  0,   3,   118, 71,  117, 0,
      41,  39,  61,  0,   0,   41,  118, 43,  62,  0,   41,  83,  43,  61,  120,
      41,  117, 71,  120, 0,   41,  120, 44,  61,  0,   41,  63,  45,  61,  0,
      41,  45,  9,   61,  0,   39,  41,  7,   61,  0,   39,  41,  45,  71,  0,
      41,  45,  58,  71,  0,   41,  120, 43,  76,  0,   41,  63,  64,  71,  0,
      41,  117, 76,  0,   0,   41,  117, 61,  63,  76,  41,  117, 43,  61,  0,
      41,  120, 69,  71,  0,   71,  38,  61,  0,   0,   71,  120, 61,  63,  76,
      71,  120, 18,  69,  0,   71,  117, 61,  63,  0,   71,  117, 38,  62,  0,
      63,  71,  39,  61,  0,   71,  118, 61,  62,  63,  39,  71,  3,   43,  0,
      39,  71,  5,   61,  0,   45,  71,  7,   61,  0,   38,  71,  4,   61,  0,
      71,  4,   61,  0,   0,   71,  120, 76,  0,   0,   71,  118, 61,  120, 0,
      71,  118, 62,  76,  0,   57,  45,  120, 0,   0,   57,  83,  44,  70,  0,
      57,  120, 44,  69,  0,   57,  120, 54,  69,  0,   57,  117, 44,  120, 0,
      57,  63,  44,  64,  0,   45,  57,  44,  58,  0,   45,  57,  54,  58,  0,
      9,   57,  16,  54,  0,   57,  63,  45,  69,  0,   57,  117, 54,  120, 0,
      45,  57,  16,  120, 0,   54,  57,  44,  57,  0,   57,  44,  63,  0,   0,
      57,  63,  54,  64,  0,   57,  118, 44,  83,  0,   9,   57,  16,  44,  0,
      44,  43,  63,  0,   0,   44,  63,  43,  64,  0,   44,  118, 43,  83,  0,
      44,  118, 43,  83,  0,   44,  63,  69,  125, 0,   44,  117, 43,  120, 0,
      44,  120, 43,  69,  0,   44,  83,  43,  70,  0,   44,  43,  57,  0,   0,
      44,  43,  64,  0,   0,   44,  76,  57,  61,  0,   43,  44,  57,  76,  0,
      44,  54,  43,  57,  0,   54,  43,  57,  0,   0,   46,  45,  76,  0,   0,
      46,  83,  47,  70,  0,   46,  120, 47,  69,  0,   46,  117, 47,  120, 0,
      46,  63,  47,  64,  0,   46,  118, 47,  83,  0,   45,  46,  47,  58,  0,
      46,  63,  42,  64,  0,   46,  117, 42,  120, 0,   46,  120, 42,  69,  0,
      46,  83,  42,  70,  0,   39,  46,  45,  47,  0,   45,  46,  42,  58,  0,
      46,  54,  47,  57,  0,   9,   46,  16,  47,  0,   5,   46,  7,   47,  0,
      42,  47,  0,   0,   0,   42,  46,  46,  47,  0,   47,  45,  61,  0,   0,
      47,  63,  41,  64,  0,   47,  63,  45,  76,  0,   47,  117, 41,  120, 0,
      47,  117, 45,  62,  0,   45,  47,  16,  61,  0,   45,  47,  41,  58,  0,
      42,  63,  41,  64,  0,   42,  118, 43,  61,  120, 42,  118, 41,  83,  0,
      42,  41,  63,  0,   0,   12,  43,  45,  0,   0,   12,  118, 46,  83,  0,
      12,  46,  63,  0,   0,   12,  120, 46,  69,  0,   12,  63,  46,  64,  0,
      12,  117, 46,  120, 0,   12,  83,  46,  70,  0,   12,  15,  46,  0,   0,
      12,  121, 15,  46,  0,   12,  123, 15,  46,  0,   123, 46,  63,  0,   0,
      63,  123, 46,  64,  0,   120, 123, 46,  69,  0,   117, 123, 46,  120, 0,
      118, 123, 46,  83,  0,   118, 123, 46,  83,  0,   83,  123, 46,  70,  0,
      123, 15,  46,  0,   0,   121, 123, 15,  46,  0,   121, 123, 0,   0,   0,
      121, 15,  46,  0,   0,   15,  44,  45,  0,   0,   15,  120, 69,  123, 0,
      15,  120, 12,  69,  0,   15,  120, 69,  121, 0,   15,  117, 120, 123, 0,
      15,  117, 12,  120, 0,   15,  117, 120, 121, 0,   15,  63,  9,   69,  0,
      15,  63,  64,  123, 0,   15,  83,  70,  123, 0,   15,  45,  58,  123, 0,
      15,  45,  58,  121, 0,   15,  45,  12,  58,  0,   15,  54,  57,  123, 0,
      15,  43,  12,  54,  0,   12,  15,  15,  123, 0,   15,  9,   120, 0,   0,
      15,  7,   69,  0,   0,   15,  118, 83,  121, 0,   15,  118, 83,  123, 0,
      15,  118, 12,  83,  0,   15,  63,  64,  121, 0,   15,  63,  12,  64,  0,
      15,  83,  12,  70,  0,   15,  83,  70,  121, 0,   9,   15,  16,  121, 0,
      9,   15,  16,  123, 0,   15,  44,  57,  123, 0,   0,   120, 61,  63,  0,
      0,   118, 61,  117, 0,   0,   45,  4,   63,  0,   0,   39,  3,   63,  0,
      43,  55,  56,  76,  0,   55,  63,  54,  120, 0,   55,  120, 57,  118, 0,
      45,  55,  54,  0,   0,   55,  43,  57,  118, 0,   55,  54,  118, 0,   0,
      55,  70,  56,  83,  0,   56,  54,  120, 0,   0,   55,  83,  56,  118, 0,
      56,  120, 55,  69,  0,   55,  58,  45,  56,  0,   16,  55,  9,   56,  0,
      55,  57,  44,  56,  0,   56,  117, 55,  120, 0,   47,  118, 50,  0,   0,
      46,  50,  47,  51,  0,   13,  46,  14,  47,  0,   9,   118, 13,  0,   0,
      13,  7,   83,  0,   0,   13,  83,  14,  118, 0,   14,  12,  120, 0,   0,
      14,  117, 13,  120, 0,   14,  120, 13,  69,  0,   13,  58,  14,  45,  0,
      50,  58,  45,  51,  0,   7,   13,  5,   14,  0,   7,   50,  5,   51,  0,
      50,  83,  51,  118, 0,   51,  48,  120, 0,   0,   51,  45,  62,  120, 0,
      50,  55,  48,  54,  118, 50,  55,  43,  49,  118, 50,  83,  48,  118, 120,
      50,  48,  118, 0,   0,   48,  45,  62,  0,   0,   49,  58,  62,  0,   0,
      49,  41,  69,  0,   0,   49,  120, 48,  69,  0,   13,  57,  14,  44,  0,
      50,  57,  44,  51,  0,   13,  43,  14,  76,  0,   43,  50,  51,  76,  0,
      7,   55,  5,   56,  0,   46,  55,  47,  56,  0,   15,  55,  56,  123, 0,
      9,   55,  12,  54,  0,   7,   83,  8,   120, 0,   7,   54,  8,   45,  0,
      7,   55,  8,   54,  0,   8,   52,  0,   0,   0,   52,  46,  0,   0,   0,
      52,  45,  76,  0,   0,   8,   63,  6,   64,  0,   8,   63,  5,   69,  0,
      8,   63,  7,   120, 0,   8,   42,  6,   46,  0,   8,   45,  6,   58,  0,
      8,   117, 6,   120, 0,   8,   120, 6,   69,  0,   6,   40,  0,   0,   0,
      6,   45,  61,  0,   0,   6,   63,  8,   0,   0,   40,  42,  0,   0,   0,
      40,  45,  61,  0,   0,   40,  4,   120, 0,   0,   40,  41,  63,  0,   0,
      8,   118, 6,   83,  0,   8,   83,  6,   70,  0,   52,  118, 47,  83,  0,
      40,  118, 41,  83,  0,   4,   39,  20,  63,  0,   7,   39,  26,  0,   0,
      7,   125, 26,  0,   0,   29,  39,  45,  86,  0,   29,  39,  45,  101, 0,
      4,   125, 20,  63,  0,   5,   39,  21,  63,  0,   4,   5,   32,  63,  0,
      5,   33,  0,   0,   0,   4,   45,  124, 0,   0,   4,   45,  22,  0,   0,
      4,   45,  21,  63,  0,   5,   41,  22,  61,  0,   4,   71,  20,  61,  0,
      29,  9,   45,  0,   0,   29,  118, 83,  101, 0,   29,  118, 83,  86,  0,
      29,  83,  70,  101, 0,   29,  83,  70,  86,  0,   29,  120, 69,  101, 0,
      29,  120, 69,  86,  0,   29,  117, 101, 120, 0,   29,  117, 86,  120, 0,
      29,  63,  64,  101, 0,   29,  63,  64,  86,  0,   29,  45,  58,  101, 0,
      29,  45,  58,  86,  0,   9,   29,  16,  101, 0,   9,   29,  16,  86,  0,
      5,   29,  7,   101, 0,   5,   29,  7,   86,  0,   29,  86,  29,  101, 0,
      22,  29,  26,  101, 0,   22,  29,  26,  86,  0,   29,  54,  57,  101, 0,
      29,  54,  57,  86,  0,   101, 7,   45,  0,   0,   101, 118, 26,  83,  0,
      86,  7,   45,  0,   0,   86,  118, 26,  83,  0,   26,  22,  63,  0,   0,
      26,  63,  124, 0,   0,   26,  63,  127, 0,   0,   26,  5,   45,  0,   0,
      26,  83,  27,  120, 0,   26,  83,  22,  70,  0,   26,  83,  70,  124, 0,
      26,  83,  70,  127, 0,   26,  120, 22,  69,  0,   26,  120, 69,  124, 0,
      26,  120, 69,  127, 0,   26,  117, 9,   76,  0,   26,  117, 45,  47,  0,
      26,  117, 7,   43,  0,   101, 26,  63,  0,   0,   26,  63,  86,  0,   0,
      26,  63,  22,  64,  0,   26,  63,  64,  124, 0,   26,  118, 83,  124, 0,
      26,  118, 83,  127, 0,   26,  118, 22,  83,  0,   26,  45,  22,  58,  0,
      26,  45,  58,  124, 0,   26,  45,  58,  127, 0,   9,   26,  16,  22,  0,
      27,  9,   76,  0,   0,   27,  10,  0,   0,   0,   27,  45,  47,  0,   0,
      27,  42,  45,  0,   0,   27,  6,   45,  0,   0,   10,  9,   76,  0,   0,
      10,  117, 11,  120, 0,   10,  120, 11,  69,  0,   10,  83,  11,  70,  0,
      9,   10,  11,  16,  0,   11,  9,   61,  0,   0,   22,  118, 42,  43,  0,
      22,  63,  21,  64,  0,   22,  117, 7,   61,  63,  22,  45,  21,  58,  0,
      9,   22,  16,  21,  0,   5,   22,  7,   21,  0,   5,   22,  4,   26,  0,
      118, 124, 46,  76,  0,   83,  124, 41,  45,  120, 63,  124, 21,  64,  0,
      117, 124, 41,  45,  0,   45,  124, 21,  58,  0,   9,   124, 16,  21,  0,
      5,   124, 7,   21,  0,   118, 127, 43,  47,  0,   83,  127, 41,  45,  120,
      63,  127, 21,  64,  0,   117, 127, 45,  63,  71,  45,  127, 21,  58,  0,
      9,   127, 16,  21,  0,   5,   127, 7,   21,  0,   21,  20,  63,  0,   0,
      21,  122, 0,   0,   0,   21,  118, 20,  83,  0,   21,  83,  39,  41,  120,
      21,  120, 41,  45,  0,   21,  120, 20,  69,  0,   21,  117, 5,   76,  0,
      21,  63,  22,  0,   0,   21,  63,  127, 0,   0,   21,  63,  20,  64,  0,
      21,  45,  20,  58,  0,   122, 20,  63,  0,   0,   118, 122, 39,  71,  120,
      118, 122, 20,  83,  0,   83,  122, 7,   61,  120, 120, 122, 20,  69,  0,
      120, 122, 41,  45,  0,   117, 122, 39,  41,  0,   117, 122, 5,   76,  0,
      117, 122, 45,  71,  0,   117, 122, 39,  63,  71,  63,  122, 127, 0,   0,
      63,  122, 20,  64,  0,   63,  122, 4,   45,  0,   45,  122, 20,  58,  0,
      5,   122, 7,   20,  0,   22,  122, 20,  26,  0,   20,  63,  19,  64,  0,
      20,  117, 3,   63,  76,  20,  117, 4,   61,  63,  20,  120, 19,  69,  0,
      20,  118, 41,  76,  0,   20,  38,  63,  90,  0,   20,  38,  63,  105, 0,
      20,  39,  32,  63,  0,   20,  35,  63,  0,   0,   4,   38,  19,  63,  0,
      19,  118, 61,  63,  71,  19,  120, 4,   76,  0,   19,  39,  63,  90,  0,
      34,  63,  92,  0,   0,   34,  2,   0,   0,   0,   34,  126, 0,   0,   0,
      34,  22,  45,  0,   0,   34,  5,   9,   0,   0,   34,  118, 83,  92,  0,
      34,  83,  70,  92,  0,   34,  120, 43,  101, 0,   34,  120, 9,   46,  0,
      34,  120, 16,  47,  0,   34,  120, 69,  92,  0,   34,  117, 26,  43,  0,
      34,  117, 7,   46,  0,   34,  117, 9,   47,  0,   34,  117, 92,  120, 0,
      34,  117, 76,  101, 0,   34,  63,  64,  92,  0,   34,  45,  58,  92,  0,
      9,   34,  16,  92,  0,   22,  34,  26,  92,  0,   34,  124, 26,  92,  0,
      34,  127, 26,  92,  0,   2,   126, 0,   0,   0,   2,   33,  64,  0,   0,
      2,   63,  92,  0,   0,   2,   45,  124, 0,   0,   2,   120, 69,  92,  0,
      2,   120, 9,   46,  0,   2,   117, 76,  86,  0,   2,   117, 7,   46,  0,
      2,   63,  64,  92,  0,   2,   45,  58,  92,  0,   126, 63,  92,  0,   0,
      126, 45,  124, 0,   0,   120, 126, 69,  92,  0,   120, 126, 9,   46,  0,
      117, 126, 76,  86,  0,   117, 126, 7,   46,  0,   63,  126, 64,  92,  0,
      45,  126, 58,  92,  0,   92,  33,  63,  0,   0,   92,  5,   7,   0,   0,
      63,  92,  33,  64,  0,   92,  118, 33,  83,  0,   45,  92,  33,  58,  0,
      5,   92,  7,   33,  0,   9,   92,  16,  33,  0,   9,   92,  7,   34,  0,
      9,   92,  7,   126, 0,   9,   92,  2,   7,   0,   22,  92,  26,  33,  0,
      92,  33,  34,  0,   0,   5,   7,   33,  63,  0,   33,  63,  64,  106, 0,
      33,  63,  64,  91,  0,   33,  120, 69,  106, 0,   33,  120, 69,  91,  0,
      33,  117, 7,   41,  0,   33,  117, 43,  122, 0,   4,   106, 37,  63,  0,
      106, 120, 32,  69,  0,   63,  106, 32,  64,  0,   63,  106, 63,  91,  0,
      91,  32,  63,  0,   0,   106, 32,  63,  0,   0,   32,  120, 69,  90,  0,
      32,  120, 69,  105, 0,   32,  63,  64,  105, 0,   63,  105, 63,  90,  0,
      39,  90,  3,   21,  0,   90,  118, 41,  71,  0,   90,  120, 31,  69,  0,
      90,  117, 3,   41,  0,   63,  90,  31,  64,  0,   4,   105, 35,  0,   0,
      105, 31,  63,  0,   0,   90,  31,  63,  0,   0,   90,  117, 63,  65,  0,
      63,  65,  4,   71,  0,   65,  120, 41,  71,  0,   31,  120, 63,  65,  0,
      4,   63,  90,  0,   0,   4,   63,  105, 0,   0,   4,   32,  0,   0,   0,
      31,  30,  63,  0,   0,   31,  117, 19,  61,  0,   3,   4,   31,  63,  0,
      3,   4,   105, 0,   0,   30,  118, 3,   61,  0,   18,  63,  38,  61,  0,
      18,  117, 61,  0,   0,   18,  120, 61,  63,  0,   18,  118, 61,  117, 0,
      18,  118, 61,  62,  0,   1,   64,  3,   63,  0,   1,   117, 0,   61,  0,
      1,   118, 61,  0,   0,   1,   120, 18,  63,  0,   35,  120, 36,  63,  0,
      35,  118, 36,  117, 0,   35,  83,  36,  120, 0,   37,  63,  35,  64,  0,
      37,  120, 35,  69,  0,   37,  117, 36,  63,  0,   37,  118, 36,  120, 0,
      35,  63,  37,  0,   0,   20,  117, 5,   61,  0,   20,  117, 3,   43,  0,
      20,  118, 43,  71,  0,   20,  45,  3,   9,   0,   20,  45,  33,  0,   0,
      5,   26,  7,   22,  0,   5,   26,  7,   124, 0,   5,   26,  7,   127, 0,
      26,  54,  22,  57,  0,   4,   39,  21,  0,   0,   21,  20,  22,  0,   0,
      21,  120, 5,   43,  0,   21,  120, 7,   76,  0,   21,  117, 4,   43,  0,
      21,  117, 7,   61,  0,   21,  22,  20,  26,  0,   3,   21,  4,   20,  0,
      122, 3,   45,  0,   0,   3,   122, 4,   20,  0,   19,  118, 71,  76,  0,
      4,   5,   106, 0,   0,   5,   63,  91,  0,   0,   63,  91,  32,  64,  0,
      31,  63,  30,  64,  0,   33,  120, 22,  43,  0,   34,  92,  2,   92,  0,
      34,  92,  92,  126, 0,   20,  37,  0,   0,   0,   20,  21,  37,  63,  0,
      9,   22,  7,   26,  0,   26,  120, 9,   43,  0,   26,  120, 45,  46,  0,
      22,  118, 21,  83,  0,   22,  43,  26,  76,  0,   22,  46,  26,  47,  0,
      29,  55,  56,  101, 0,   29,  55,  56,  86,  0,   13,  29,  14,  101, 0,
      13,  29,  14,  86,  0,   29,  88,  89,  101, 0,   29,  88,  86,  89,  0,
      29,  103, 101, 104, 0,   29,  103, 86,  104, 0,   101, 118, 103, 0,   0,
      86,  118, 88,  0,   0,   83,  101, 102, 120, 0,   83,  86,  87,  120, 0,
      55,  101, 54,  102, 0,   55,  86,  54,  87,  0,   101, 103, 102, 0,   0,
      86,  103, 87,  102, 0,   88,  101, 87,  102, 0,   86,  88,  87,  0,   0,
      83,  103, 104, 118, 0,   83,  88,  89,  118, 0,   45,  103, 54,  102, 0,
      45,  88,  54,  87,  0,   104, 102, 120, 0,   0,   89,  87,  120, 0,   0,
      102, 9,   43,  0,   0,   87,  45,  46,  0,   0,   26,  120, 28,  0,   0,
      28,  9,   43,  0,   0,   28,  45,  46,  0,   0,   28,  118, 119, 0,   0,
      119, 43,  46,  120, 0,   26,  55,  22,  56,  0,   26,  55,  27,  54,  0,
      13,  26,  14,  22,  0,   24,  26,  22,  25,  0,   24,  26,  23,  27,  0,
      26,  50,  22,  51,  0,   26,  103, 22,  104, 0,   26,  88,  22,  89,  0,
      26,  103, 27,  102, 0,   22,  118, 24,  0,   0,   22,  83,  23,  120, 0,
      22,  55,  23,  54,  0,   24,  45,  23,  54,  0,   22,  24,  23,  0,   0,
      24,  83,  25,  118, 0,   24,  83,  23,  118, 120, 24,  55,  23,  54,  118,
      24,  23,  118, 0,   0,   23,  5,   43,  0,   0,   25,  23,  120, 0,   0,
      24,  43,  25,  76,  0,   43,  103, 76,  104, 0,   43,  88,  76,  89,  0,
      7,   103, 5,   104, 0,   7,   88,  5,   89,  0,   24,  58,  25,  45,  0,
      58,  103, 45,  104, 0,   58,  88,  45,  89,  0,   57,  103, 44,  104, 0,
      57,  88,  44,  89,  0,   24,  46,  25,  47,  0,   46,  103, 47,  104, 0,
      46,  88,  47,  89,  0,   0,   94,  60,  0,   0,   3,   114, 61,  72,  0,
      3,   72,  4,   59,  0,   39,  114, 72,  120, 0,   72,  59,  63,  0,   0,
      17,  59,  0,   0,   0,   38,  94,  74,  0,   0,   63,  74,  60,  64,  0,
      63,  74,  39,  94,  0,   74,  117, 60,  120, 0,   74,  117, 61,  63,  94,
      74,  117, 72,  114, 0,   74,  120, 60,  69,  0,   74,  120, 63,  76,  94,
      74,  118, 60,  83,  0,   74,  118, 62,  63,  94,  74,  118, 76,  98,  0,
      60,  117, 61,  94,  0,   60,  117, 59,  114, 0,   60,  120, 61,  63,  94,
      60,  63,  59,  109, 0,   60,  120, 72,  114, 0,   60,  63,  72,  93,  0,
      60,  118, 108, 114, 0,   45,  80,  58,  114, 0,   45,  85,  58,  115, 0,
      45,  68,  54,  110, 0,   45,  68,  58,  80,  0,   45,  82,  58,  80,  0,
      45,  111, 58,  82,  0,   45,  111, 58,  68,  0,   45,  95,  58,  113, 0,
      45,  96,  58,  95,  0,   45,  97,  58,  96,  0,   58,  109, 45,  110, 0,
      58,  110, 45,  112, 0,   45,  110, 39,  112, 0,   16,  109, 9,   110, 0,
      16,  110, 9,   112, 0,   29,  110, 101, 112, 0,   29,  110, 86,  112, 0,
      45,  114, 53,  0,   0,   53,  63,  64,  67,  0,   53,  63,  45,  80,  0,
      53,  117, 67,  120, 0,   53,  117, 45,  115, 0,   53,  120, 67,  69,  0,
      53,  120, 45,  85,  0,   45,  53,  58,  67,  0,   53,  110, 67,  112, 0,
      67,  63,  78,  0,   0,   67,  118, 43,  115, 0,   63,  67,  45,  114, 0,
      63,  67,  64,  75,  0,   67,  117, 75,  120, 0,   67,  117, 43,  114, 0,
      67,  120, 44,  114, 0,   67,  120, 69,  75,  0,   45,  67,  9,   114, 0,
      45,  67,  58,  75,  0,   67,  110, 75,  112, 0,   45,  115, 54,  114, 0,
      38,  115, 76,  114, 0,   39,  115, 43,  114, 0,   59,  114, 61,  94,  0,
      78,  63,  108, 0,   0,   78,  93,  108, 109, 0,   54,  80,  57,  114, 0,
      83,  108, 78,  118, 0,   61,  98,  62,  94,  0,   39,  98,  43,  94,  0,
      45,  98,  54,  94,  0,   76,  98,  62,  63,  94,  71,  98,  61,  76,  94,
      4,   98,  63,  71,  94,  5,   98,  42,  94,  0,   84,  117, 108, 120, 0,
      63,  84,  64,  108, 0,   63,  84,  61,  110, 0,   84,  120, 69,  108, 0,
      45,  84,  58,  108, 0,   84,  110, 108, 112, 0,   59,  115, 61,  98,  0,
      59,  115, 62,  94,  0,   59,  62,  61,  108, 0,   59,  112, 72,  110, 0,
      59,  78,  72,  108, 0,   85,  108, 78,  115, 0,   43,  108, 76,  78,  0,
      0,   110, 38,  109, 0,   0,   94,  59,  93,  0,   39,  94,  72,  109, 0,
      1,   94,  59,  0,   0,   66,  93,  39,  94,  0,   63,  66,  64,  72,  0,
      66,  117, 72,  120, 0,   66,  117, 63,  78,  0,   66,  117, 63,  75,  0,
      66,  63,  72,  0,   0,   66,  83,  70,  72,  0,   66,  118, 43,  114, 0,
      45,  66,  58,  72,  0,   66,  120, 69,  72,  0,   66,  110, 72,  112, 0,
      0,   114, 59,  117, 0,   38,  114, 72,  117, 0,   38,  114, 59,  120, 0,
      38,  114, 61,  109, 0,   38,  114, 63,  108, 0,   39,  114, 63,  78,  0,
      39,  114, 63,  75,  0,   39,  114, 61,  110, 0,   39,  114, 66,  117, 0,
      45,  114, 69,  72,  0,   45,  114, 66,  120, 0,   71,  114, 61,  75,  0,
      71,  114, 62,  72,  0,   114, 125, 72,  120, 0,   75,  72,  117, 0,   0,
      63,  75,  72,  120, 0,   63,  75,  63,  78,  0,   63,  75,  63,  84,  0,
      63,  75,  61,  110, 0,   75,  117, 76,  114, 0,   39,  93,  63,  72,  0,
      39,  93,  38,  109, 0,   38,  93,  59,  63,  0,   38,  93,  0,   109, 0,
      62,  93,  61,  114, 0,   71,  93,  61,  72,  0,   45,  93,  63,  66,  0,
      45,  93,  63,  73,  0,   73,  63,  72,  0,   0,   63,  73,  63,  66,  0,
      63,  73,  64,  72,  0,   73,  117, 63,  78,  0,   73,  117, 72,  120, 0,
      73,  120, 69,  72,  0,   45,  73,  58,  72,  0,   5,   93,  39,  72,  0,
      59,  69,  72,  120, 0,   59,  69,  63,  84,  0,   72,  120, 63,  84,  0,
      72,  120, 63,  78,  0,   72,  120, 61,  110, 0,   63,  84,  63,  78,  0,
      72,  117, 63,  108, 0,   72,  117, 61,  109, 0,   72,  117, 59,  120, 0,
      59,  64,  63,  72,  0,   59,  117, 61,  93,  0,   59,  118, 108, 117, 0,
      59,  120, 63,  108, 0,   59,  72,  17,  63,  0,   59,  115, 108, 114, 0,
      59,  98,  94,  108, 0,   17,  117, 59,  108, 0,   17,  120, 59,  78,  0,
      17,  120, 59,  84,  0,   63,  78,  64,  108, 0,   63,  78,  61,  110, 0,
      78,  61,  109, 0,   0,   78,  117, 108, 120, 0,   78,  117, 62,  109, 0,
      78,  117, 61,  80,  0,   78,  120, 69,  108, 0,   78,  120, 62,  110, 0,
      78,  83,  70,  108, 0,   78,  118, 62,  80,  0,   78,  110, 108, 112, 0,
      78,  109, 108, 110, 0,   63,  108, 61,  109, 0,   108, 117, 61,  114, 0,
      108, 117, 62,  93,  0,   93,  108, 61,  94,  0,   108, 120, 76,  114, 0,
      108, 61,  93,  0,   0,   108, 114, 61,  98,  0,   108, 114, 62,  94,  0,
      108, 118, 62,  114, 0,   76,  108, 61,  78,  0,   108, 115, 61,  114, 0,
      108, 115, 62,  98,  0,   80,  108, 78,  114, 0,   108, 61,  94,  0,   0,
      76,  114, 61,  80,  0,   61,  115, 62,  114, 0,   76,  115, 62,  63,  114,
      54,  115, 43,  85,  0,   54,  114, 43,  80,  0,   43,  115, 76,  85,  0,
      43,  114, 76,  80,  0,   76,  115, 61,  85,  0,   76,  115, 61,  114, 120,
      93,  108, 59,  114, 0,   58,  59,  45,  72,  0,   0,   114, 61,  93,  0,
      62,  109, 61,  80,  0,   58,  108, 45,  78,  0,   0,   98,  59,  114, 0,
      38,  110, 63,  72,  0,   38,  109, 63,  72,  0,   39,  109, 63,  72,  0,
      45,  93,  63,  72,  0,   45,  93,  64,  72,  0,   58,  93,  45,  109, 0,
      20,  93,  4,   72,  0,   38,  98,  72,  114, 0,   38,  98,  61,  63,  94,
      18,  94,  59,  108, 0};
  const int nuv[6155] = {
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, 1,  0, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 2, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -2, 1,  0, 0, 0,
      -2, 1,  0, 0, 0, -2, 1,  0, 0, 0, -2, 1,  0, 0, 0, -2, 1,  0, 0, 0,
      -1, -1, 1, 0, 0, -1, -1, 2, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 0, 0, -1, -1, 1, 0, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0,
      -2, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 2, 0, 0, -1, -1, 1, 1, 0, -2, 1,  1, 0, 0, -2, 1,  1, 0, 0,
      -2, 1,  0, 0, 0, -2, 1,  0, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -2, 1,  1, 0, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 2, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 0, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 2, 0, 0, -1, -1, 1, 1, 0, -2, 2,  1, 0, 0, -2, 1,  1, 0, 0,
      -1, -1, 1, 0, 0, -1, -1, 1, 0, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -2, 2,  1, 0, 0, -1, 2,  0, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 0, 0, -1, -1, 2, 0, 0, -1, 2,  0, 0, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -2, 1,  1, 0, 0, -2, 1,  1, 0, 0,
      -2, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 2, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 2, 0, 0, -2, 1,  1, 0, 0,
      -1, -1, 2, 0, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -2, 1,  1, 0, 0,
      -1, 1,  1, 0, 0, -1, 2,  0, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 2, 0, 0,
      -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -2, 1,  2, 0, 0,
      -2, 1,  1, 0, 0, -1, 2,  0, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -2, 1, 1, 0,
      -1, -1, 1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 1, -1, -1, 1, 1, 0, -1, -1, 2, 0, 0, -1, -1, 1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -2, 1,  1, 0, 0, -2, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 0, 0, -1, -1, 1, 0, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -2, 1,  1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, -1, 1, 0, 0,
      -1, -1, 1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, 1,  0, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 2, 0, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0,
      -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 1,
      -2, 1,  1, 0, 0, -2, 2,  1, 0, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 2, 0, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -2, 1,  1, 0, 0, -2, 1,  0, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -2, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 2, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 2, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 1, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -2, 1,  1, 0, 0, -2, 1,  2, 0, 0, -2, 1,  1, 0, 0,
      -2, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 2, 0, 0,
      -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, 1,  0, 0, 0, -1, -1, 1, 1, 1,
      -1, -1, 1, 1, 0, -1, -1, 1, 2, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 2, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0,
      -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 1, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -2, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -2, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 1,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 2, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -2, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 2, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 2, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 1,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 2, 0, 0, -1, -1, 1, 1, 1, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 1, -1, -1, 1, 1, 0,
      -1, -1, 2, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 1,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -2, 1,  2, 0, 0, -1, -1, 2, 0, 0, -1, -1, 2, 1, 0, -1, -1, 1, 1, 0,
      -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -2, 1,  1, 0, 0, -2, 2,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -2, 1,  1, 0, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  0, 0, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 1, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0,
      -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -2, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -2, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, 1,  0, 0, 0,
      -2, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 2, 0, 0, -2, 1,  1, 1, 0, -2, 2,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, 1,  1, 1, 0, -1, -1, 1, 1, 1,
      -1, -1, 1, 1, 1, -1, -1, 1, 1, 1, -2, 2,  1, 0, 0, -1, 1,  1, 0, 0,
      -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  0, 0, 0, -1, 1,  0, 0, 0,
      -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, 1,  0, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 0, 0, -1, 1,  0, 0, 0,
      -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 0, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -2, 1,  0, 0, 0,
      -1, -1, 1, 0, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0,
      -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, 1,  1, 0, 0, -1, 1,  0, 0, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0,
      -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 1, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 1,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 1, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 1, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, 1,  1, 0, 0, -1, 1,  0, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 1,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 0, 0,
      -1, -1, 1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 1, -1, -1, 1, 1, 0, -1, -1, 1, 1, 1, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 1, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 1, -1, -1, 1, 1, 1, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -2, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 1, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, 1,  1, 0, 0, -1, 1,  0, 0, 0, -1, 1,  0, 0, 0, -1, 1,  1, 0, 0,
      -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  0, 0, 0, -1, 1,  1, 0, 0,
      -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -2, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0,
      -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, 1,  1, 0, 0,
      -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -2, 1,  1, 0, 0, -2, 1,  1, 0, 0, -2, 1,  0, 0, 0,
      -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 0, 0,
      -1, -1, 1, 2, 0, -1, -1, 1, 1, 0, -1, -1, 2, 0, 0, -1, -1, 2, 1, 0,
      -1, -1, 2, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 2, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 0, 0,
      -2, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -2, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -2, 1,  0, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 2, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 2, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0,
      -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 0, 0,
      -1, 1,  1, 0, 0, -1, 1,  1, 0, 0, -1, -1, 1, 0, 0, -1, 1,  1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 2, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 1,
      -1, -1, 1, 1, 1, -2, 2,  1, 0, 0, -1, 1,  1, 0, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, 2,  0, 0, 0, -1, -1, 1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 1,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 1, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 1, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 1, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 1, -1, -1, 1, 1, 1, -1, -1, 1, 1, 1,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 2, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, 1,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 2, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -2, 2,  1, 0, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 1, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 1, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 2, 1, 0, -1, -1, 1, 1, 0, -1, -1, 2, 1, 0,
      -1, -1, 2, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 1, 1, 0,
      -1, -1, 1, 1, 0, -1, -1, 1, 1, 1, -1, -1, 1, 1, 0};
  if (i < 1) {
    // Return max num species per reaction
    nspec = 5;
  } else {
    if (i > 1231) {
      nspec = -1;
    } else {
      nspec = ns[i - 1];
      for (int j = 0; j < nspec; ++j) {
        ki[j] = kiv[(i - 1) * 5 + j] + 1;
        nu[j] = nuv[(i - 1) * 5 + j];
      }
    }
  }
}

// Returns the progress rates of each reactions
// Given P, T, and mole fractions
void CKKFKR(const amrex::Real P, const amrex::Real T, const amrex::Real x[],
            amrex::Real q_f[], amrex::Real q_r[]) {
  amrex::Real c[129]; // temporary storage
  amrex::Real PORT =
      1e6 * P / (8.31446261815324e+07 * T); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (int id = 0; id < 129; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  progressRateFR(q_f, q_r, c, T);

  // convert to chemkin units
  for (int id = 0; id < 1231; ++id) {
    q_f[id] *= 1.0e-6;
    q_r[id] *= 1.0e-6;
  }
}

// compute the progress rate for each reaction
// USES progressRate : todo switch to GPU
void progressRateFR(amrex::Real *q_f, amrex::Real *q_r, amrex::Real *sc,
                    amrex::Real T) {
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);
  // compute the Gibbs free energy
  amrex::Real g_RT[129];
  gibbs(g_RT, T);

  amrex::Real sc_qss[1];
  comp_qfqr(q_f, q_r, sc, sc_qss, T, invT, logT);
}

// save atomic weights into array
void atomicWeight(amrex::Real *awt) {
  awt[0] = 12.011000; // C
  awt[1] = 1.008000;  // H
  awt[2] = 14.007000; // N
  awt[3] = 15.999000; // O
  awt[4] = 39.950000; // Ar
}

// get atomic weight for all elements
void CKAWT(amrex::Real *awt) { atomicWeight(awt); }

// Returns the elemental composition
// of the speciesi (mdim is num of elements)
void CKNCF(int *ncf) {
  int kd = 5;
  // Zero ncf
  for (int id = 0; id < kd * 129; ++id) {
    ncf[id] = 0;
  }

  // C
  ncf[0 * kd + 0] = 1; // C

  // C2
  ncf[1 * kd + 0] = 2; // C

  // C2C4H8
  ncf[2 * kd + 0] = 4; // C
  ncf[2 * kd + 1] = 8; // H

  // C2H
  ncf[3 * kd + 0] = 2; // C
  ncf[3 * kd + 1] = 1; // H

  // C2H2
  ncf[4 * kd + 0] = 2; // C
  ncf[4 * kd + 1] = 2; // H

  // C2H3
  ncf[5 * kd + 0] = 2; // C
  ncf[5 * kd + 1] = 3; // H

  // C2H3O
  ncf[6 * kd + 0] = 2; // C
  ncf[6 * kd + 1] = 3; // H
  ncf[6 * kd + 3] = 1; // O

  // C2H4
  ncf[7 * kd + 0] = 2; // C
  ncf[7 * kd + 1] = 4; // H

  // C2H4O
  ncf[8 * kd + 0] = 2; // C
  ncf[8 * kd + 1] = 4; // H
  ncf[8 * kd + 3] = 1; // O

  // C2H5
  ncf[9 * kd + 0] = 2; // C
  ncf[9 * kd + 1] = 5; // H

  // C2H5CHO
  ncf[10 * kd + 0] = 3; // C
  ncf[10 * kd + 1] = 6; // H
  ncf[10 * kd + 3] = 1; // O

  // C2H5CO
  ncf[11 * kd + 0] = 3; // C
  ncf[11 * kd + 1] = 5; // H
  ncf[11 * kd + 3] = 1; // O

  // C2H5O
  ncf[12 * kd + 0] = 2; // C
  ncf[12 * kd + 1] = 5; // H
  ncf[12 * kd + 3] = 1; // O

  // C2H5O2
  ncf[13 * kd + 0] = 2; // C
  ncf[13 * kd + 1] = 5; // H
  ncf[13 * kd + 3] = 2; // O

  // C2H5O2H
  ncf[14 * kd + 0] = 2; // C
  ncf[14 * kd + 1] = 6; // H
  ncf[14 * kd + 3] = 2; // O

  // C2H5OH
  ncf[15 * kd + 0] = 2; // C
  ncf[15 * kd + 1] = 6; // H
  ncf[15 * kd + 3] = 1; // O

  // C2H6
  ncf[16 * kd + 0] = 2; // C
  ncf[16 * kd + 1] = 6; // H

  // C2N2
  ncf[17 * kd + 0] = 2; // C
  ncf[17 * kd + 2] = 2; // N

  // C2O
  ncf[18 * kd + 0] = 2; // C
  ncf[18 * kd + 3] = 1; // O

  // C3H2
  ncf[19 * kd + 0] = 3; // C
  ncf[19 * kd + 1] = 2; // H

  // C3H3
  ncf[20 * kd + 0] = 3; // C
  ncf[20 * kd + 1] = 3; // H

  // C3H4
  ncf[21 * kd + 0] = 3; // C
  ncf[21 * kd + 1] = 4; // H

  // C3H5
  ncf[22 * kd + 0] = 3; // C
  ncf[22 * kd + 1] = 5; // H

  // C3H5O
  ncf[23 * kd + 0] = 3; // C
  ncf[23 * kd + 1] = 5; // H
  ncf[23 * kd + 3] = 1; // O

  // C3H5O2
  ncf[24 * kd + 0] = 3; // C
  ncf[24 * kd + 1] = 5; // H
  ncf[24 * kd + 3] = 2; // O

  // C3H5O2H
  ncf[25 * kd + 0] = 3; // C
  ncf[25 * kd + 1] = 6; // H
  ncf[25 * kd + 3] = 2; // O

  // C3H6
  ncf[26 * kd + 0] = 3; // C
  ncf[26 * kd + 1] = 6; // H

  // C3H6O
  ncf[27 * kd + 0] = 3; // C
  ncf[27 * kd + 1] = 6; // H
  ncf[27 * kd + 3] = 1; // O

  // C3H6OH
  ncf[28 * kd + 0] = 3; // C
  ncf[28 * kd + 1] = 7; // H
  ncf[28 * kd + 3] = 1; // O

  // C3H8
  ncf[29 * kd + 0] = 3; // C
  ncf[29 * kd + 1] = 8; // H

  // C4H
  ncf[30 * kd + 0] = 4; // C
  ncf[30 * kd + 1] = 1; // H

  // C4H2
  ncf[31 * kd + 0] = 4; // C
  ncf[31 * kd + 1] = 2; // H

  // C4H4
  ncf[32 * kd + 0] = 4; // C
  ncf[32 * kd + 1] = 4; // H

  // C4H6
  ncf[33 * kd + 0] = 4; // C
  ncf[33 * kd + 1] = 6; // H

  // C4H8
  ncf[34 * kd + 0] = 4; // C
  ncf[34 * kd + 1] = 8; // H

  // C6H5
  ncf[35 * kd + 0] = 6; // C
  ncf[35 * kd + 1] = 5; // H

  // C6H5O
  ncf[36 * kd + 0] = 6; // C
  ncf[36 * kd + 1] = 5; // H
  ncf[36 * kd + 3] = 1; // O

  // C6H6
  ncf[37 * kd + 0] = 6; // C
  ncf[37 * kd + 1] = 6; // H

  // CH
  ncf[38 * kd + 0] = 1; // C
  ncf[38 * kd + 1] = 1; // H

  // CH2
  ncf[39 * kd + 0] = 1; // C
  ncf[39 * kd + 1] = 2; // H

  // CH2CHOW
  ncf[40 * kd + 0] = 2; // C
  ncf[40 * kd + 1] = 3; // H
  ncf[40 * kd + 3] = 1; // O

  // CH2CO
  ncf[41 * kd + 0] = 2; // C
  ncf[41 * kd + 1] = 2; // H
  ncf[41 * kd + 3] = 1; // O

  // CH2HCO
  ncf[42 * kd + 0] = 2; // C
  ncf[42 * kd + 1] = 3; // H
  ncf[42 * kd + 3] = 1; // O

  // CH2O
  ncf[43 * kd + 0] = 1; // C
  ncf[43 * kd + 1] = 2; // H
  ncf[43 * kd + 3] = 1; // O

  // CH2OH
  ncf[44 * kd + 0] = 1; // C
  ncf[44 * kd + 1] = 3; // H
  ncf[44 * kd + 3] = 1; // O

  // CH3
  ncf[45 * kd + 0] = 1; // C
  ncf[45 * kd + 1] = 3; // H

  // CH3CHO
  ncf[46 * kd + 0] = 2; // C
  ncf[46 * kd + 1] = 4; // H
  ncf[46 * kd + 3] = 1; // O

  // CH3CO
  ncf[47 * kd + 0] = 2; // C
  ncf[47 * kd + 1] = 3; // H
  ncf[47 * kd + 3] = 1; // O

  // CH3CO2
  ncf[48 * kd + 0] = 2; // C
  ncf[48 * kd + 1] = 3; // H
  ncf[48 * kd + 3] = 2; // O

  // CH3CO2H
  ncf[49 * kd + 0] = 2; // C
  ncf[49 * kd + 1] = 4; // H
  ncf[49 * kd + 3] = 2; // O

  // CH3CO3
  ncf[50 * kd + 0] = 2; // C
  ncf[50 * kd + 1] = 3; // H
  ncf[50 * kd + 3] = 3; // O

  // CH3CO3H
  ncf[51 * kd + 0] = 2; // C
  ncf[51 * kd + 1] = 4; // H
  ncf[51 * kd + 3] = 3; // O

  // CH3HCOW
  ncf[52 * kd + 0] = 2; // C
  ncf[52 * kd + 1] = 4; // H
  ncf[52 * kd + 3] = 1; // O

  // CH3NO
  ncf[53 * kd + 0] = 1; // C
  ncf[53 * kd + 1] = 3; // H
  ncf[53 * kd + 2] = 1; // N
  ncf[53 * kd + 3] = 1; // O

  // CH3O
  ncf[54 * kd + 0] = 1; // C
  ncf[54 * kd + 1] = 3; // H
  ncf[54 * kd + 3] = 1; // O

  // CH3O2
  ncf[55 * kd + 0] = 1; // C
  ncf[55 * kd + 1] = 3; // H
  ncf[55 * kd + 3] = 2; // O

  // CH3O2H
  ncf[56 * kd + 0] = 1; // C
  ncf[56 * kd + 1] = 4; // H
  ncf[56 * kd + 3] = 2; // O

  // CH3OH
  ncf[57 * kd + 0] = 1; // C
  ncf[57 * kd + 1] = 4; // H
  ncf[57 * kd + 3] = 1; // O

  // CH4
  ncf[58 * kd + 0] = 1; // C
  ncf[58 * kd + 1] = 4; // H

  // CN
  ncf[59 * kd + 0] = 1; // C
  ncf[59 * kd + 2] = 1; // N

  // CNN
  ncf[60 * kd + 0] = 1; // C
  ncf[60 * kd + 2] = 2; // N

  // CO
  ncf[61 * kd + 0] = 1; // C
  ncf[61 * kd + 3] = 1; // O

  // CO2
  ncf[62 * kd + 0] = 1; // C
  ncf[62 * kd + 3] = 2; // O

  // H
  ncf[63 * kd + 1] = 1; // H

  // H2
  ncf[64 * kd + 1] = 2; // H

  // H2C4O
  ncf[65 * kd + 0] = 4; // C
  ncf[65 * kd + 1] = 2; // H
  ncf[65 * kd + 3] = 1; // O

  // H2CN
  ncf[66 * kd + 0] = 1; // C
  ncf[66 * kd + 1] = 2; // H
  ncf[66 * kd + 2] = 1; // N

  // H2CNO
  ncf[67 * kd + 0] = 1; // C
  ncf[67 * kd + 1] = 2; // H
  ncf[67 * kd + 2] = 1; // N
  ncf[67 * kd + 3] = 1; // O

  // H2NO
  ncf[68 * kd + 1] = 2; // H
  ncf[68 * kd + 2] = 1; // N
  ncf[68 * kd + 3] = 1; // O

  // H2O
  ncf[69 * kd + 1] = 2; // H
  ncf[69 * kd + 3] = 1; // O

  // H2O2
  ncf[70 * kd + 1] = 2; // H
  ncf[70 * kd + 3] = 2; // O

  // HCCO
  ncf[71 * kd + 0] = 2; // C
  ncf[71 * kd + 1] = 1; // H
  ncf[71 * kd + 3] = 1; // O

  // HCN
  ncf[72 * kd + 0] = 1; // C
  ncf[72 * kd + 1] = 1; // H
  ncf[72 * kd + 2] = 1; // N

  // HCNH
  ncf[73 * kd + 0] = 1; // C
  ncf[73 * kd + 1] = 2; // H
  ncf[73 * kd + 2] = 1; // N

  // HCNN
  ncf[74 * kd + 0] = 1; // C
  ncf[74 * kd + 1] = 1; // H
  ncf[74 * kd + 2] = 2; // N

  // HCNO
  ncf[75 * kd + 0] = 1; // C
  ncf[75 * kd + 1] = 1; // H
  ncf[75 * kd + 2] = 1; // N
  ncf[75 * kd + 3] = 1; // O

  // HCO
  ncf[76 * kd + 0] = 1; // C
  ncf[76 * kd + 1] = 1; // H
  ncf[76 * kd + 3] = 1; // O

  // HNCN
  ncf[77 * kd + 0] = 1; // C
  ncf[77 * kd + 1] = 1; // H
  ncf[77 * kd + 2] = 2; // N

  // HNCO
  ncf[78 * kd + 0] = 1; // C
  ncf[78 * kd + 1] = 1; // H
  ncf[78 * kd + 2] = 1; // N
  ncf[78 * kd + 3] = 1; // O

  // HNNO
  ncf[79 * kd + 1] = 1; // H
  ncf[79 * kd + 2] = 2; // N
  ncf[79 * kd + 3] = 1; // O

  // HNO
  ncf[80 * kd + 1] = 1; // H
  ncf[80 * kd + 2] = 1; // N
  ncf[80 * kd + 3] = 1; // O

  // HNO3
  ncf[81 * kd + 1] = 1; // H
  ncf[81 * kd + 2] = 1; // N
  ncf[81 * kd + 3] = 3; // O

  // HNOH
  ncf[82 * kd + 1] = 2; // H
  ncf[82 * kd + 2] = 1; // N
  ncf[82 * kd + 3] = 1; // O

  // HO2
  ncf[83 * kd + 1] = 1; // H
  ncf[83 * kd + 3] = 2; // O

  // HOCN
  ncf[84 * kd + 0] = 1; // C
  ncf[84 * kd + 1] = 1; // H
  ncf[84 * kd + 2] = 1; // N
  ncf[84 * kd + 3] = 1; // O

  // HONO
  ncf[85 * kd + 1] = 1; // H
  ncf[85 * kd + 2] = 1; // N
  ncf[85 * kd + 3] = 2; // O

  // IC3H7
  ncf[86 * kd + 0] = 3; // C
  ncf[86 * kd + 1] = 7; // H

  // IC3H7O
  ncf[87 * kd + 0] = 3; // C
  ncf[87 * kd + 1] = 7; // H
  ncf[87 * kd + 3] = 1; // O

  // IC3H7O2
  ncf[88 * kd + 0] = 3; // C
  ncf[88 * kd + 1] = 7; // H
  ncf[88 * kd + 3] = 2; // O

  // IC3H7O2H
  ncf[89 * kd + 0] = 3; // C
  ncf[89 * kd + 1] = 8; // H
  ncf[89 * kd + 3] = 2; // O

  // IC4H3
  ncf[90 * kd + 0] = 4; // C
  ncf[90 * kd + 1] = 3; // H

  // IC4H5
  ncf[91 * kd + 0] = 4; // C
  ncf[91 * kd + 1] = 5; // H

  // IC4H7
  ncf[92 * kd + 0] = 4; // C
  ncf[92 * kd + 1] = 7; // H

  // N
  ncf[93 * kd + 2] = 1; // N

  // N2
  ncf[94 * kd + 2] = 2; // N

  // N2H2
  ncf[95 * kd + 1] = 2; // H
  ncf[95 * kd + 2] = 2; // N

  // N2H3
  ncf[96 * kd + 1] = 3; // H
  ncf[96 * kd + 2] = 2; // N

  // N2H4
  ncf[97 * kd + 1] = 4; // H
  ncf[97 * kd + 2] = 2; // N

  // N2O
  ncf[98 * kd + 2] = 2; // N
  ncf[98 * kd + 3] = 1; // O

  // N2O3
  ncf[99 * kd + 2] = 2; // N
  ncf[99 * kd + 3] = 3; // O

  // N2O4
  ncf[100 * kd + 2] = 2; // N
  ncf[100 * kd + 3] = 4; // O

  // NC3H7
  ncf[101 * kd + 0] = 3; // C
  ncf[101 * kd + 1] = 7; // H

  // NC3H7O
  ncf[102 * kd + 0] = 3; // C
  ncf[102 * kd + 1] = 7; // H
  ncf[102 * kd + 3] = 1; // O

  // NC3H7O2
  ncf[103 * kd + 0] = 3; // C
  ncf[103 * kd + 1] = 7; // H
  ncf[103 * kd + 3] = 2; // O

  // NC3H7O2H
  ncf[104 * kd + 0] = 3; // C
  ncf[104 * kd + 1] = 8; // H
  ncf[104 * kd + 3] = 2; // O

  // NC4H3
  ncf[105 * kd + 0] = 4; // C
  ncf[105 * kd + 1] = 3; // H

  // NC4H5
  ncf[106 * kd + 0] = 4; // C
  ncf[106 * kd + 1] = 5; // H

  // NCN
  ncf[107 * kd + 0] = 1; // C
  ncf[107 * kd + 2] = 2; // N

  // NCO
  ncf[108 * kd + 0] = 1; // C
  ncf[108 * kd + 2] = 1; // N
  ncf[108 * kd + 3] = 1; // O

  // NH
  ncf[109 * kd + 1] = 1; // H
  ncf[109 * kd + 2] = 1; // N

  // NH2
  ncf[110 * kd + 1] = 2; // H
  ncf[110 * kd + 2] = 1; // N

  // NH2OH
  ncf[111 * kd + 1] = 3; // H
  ncf[111 * kd + 2] = 1; // N
  ncf[111 * kd + 3] = 1; // O

  // NH3
  ncf[112 * kd + 1] = 3; // H
  ncf[112 * kd + 2] = 1; // N

  // NNH
  ncf[113 * kd + 1] = 1; // H
  ncf[113 * kd + 2] = 2; // N

  // NO
  ncf[114 * kd + 2] = 1; // N
  ncf[114 * kd + 3] = 1; // O

  // NO2
  ncf[115 * kd + 2] = 1; // N
  ncf[115 * kd + 3] = 2; // O

  // NO3
  ncf[116 * kd + 2] = 1; // N
  ncf[116 * kd + 3] = 3; // O

  // O
  ncf[117 * kd + 3] = 1; // O

  // O2
  ncf[118 * kd + 3] = 2; // O

  // O2C3H6OH
  ncf[119 * kd + 0] = 3; // C
  ncf[119 * kd + 1] = 7; // H
  ncf[119 * kd + 3] = 3; // O

  // OH
  ncf[120 * kd + 1] = 1; // H
  ncf[120 * kd + 3] = 1; // O

  // PC2H5O
  ncf[121 * kd + 0] = 2; // C
  ncf[121 * kd + 1] = 5; // H
  ncf[121 * kd + 3] = 1; // O

  // PC3H4
  ncf[122 * kd + 0] = 3; // C
  ncf[122 * kd + 1] = 4; // H

  // SC2H5O
  ncf[123 * kd + 0] = 2; // C
  ncf[123 * kd + 1] = 5; // H
  ncf[123 * kd + 3] = 1; // O

  // SC3H5
  ncf[124 * kd + 0] = 3; // C
  ncf[124 * kd + 1] = 5; // H

  // SCH2
  ncf[125 * kd + 0] = 1; // C
  ncf[125 * kd + 1] = 2; // H

  // T2C4H8
  ncf[126 * kd + 0] = 4; // C
  ncf[126 * kd + 1] = 8; // H

  // TC3H5
  ncf[127 * kd + 0] = 3; // C
  ncf[127 * kd + 1] = 5; // H

  // AR
  ncf[128 * kd + 4] = 1; // Ar
}

// Returns the vector of strings of element names
void CKSYME_STR(amrex::Vector<std::string> &ename) {
  ename.resize(5);
  ename[0] = "C";
  ename[1] = "H";
  ename[2] = "N";
  ename[3] = "O";
  ename[4] = "Ar";
}

// Returns the vector of strings of species names
void CKSYMS_STR(amrex::Vector<std::string> &kname) {
  kname.resize(129);
  kname[0] = "C";
  kname[1] = "C2";
  kname[2] = "C2C4H8";
  kname[3] = "C2H";
  kname[4] = "C2H2";
  kname[5] = "C2H3";
  kname[6] = "C2H3O";
  kname[7] = "C2H4";
  kname[8] = "C2H4O";
  kname[9] = "C2H5";
  kname[10] = "C2H5CHO";
  kname[11] = "C2H5CO";
  kname[12] = "C2H5O";
  kname[13] = "C2H5O2";
  kname[14] = "C2H5O2H";
  kname[15] = "C2H5OH";
  kname[16] = "C2H6";
  kname[17] = "C2N2";
  kname[18] = "C2O";
  kname[19] = "C3H2";
  kname[20] = "C3H3";
  kname[21] = "C3H4";
  kname[22] = "C3H5";
  kname[23] = "C3H5O";
  kname[24] = "C3H5O2";
  kname[25] = "C3H5O2H";
  kname[26] = "C3H6";
  kname[27] = "C3H6O";
  kname[28] = "C3H6OH";
  kname[29] = "C3H8";
  kname[30] = "C4H";
  kname[31] = "C4H2";
  kname[32] = "C4H4";
  kname[33] = "C4H6";
  kname[34] = "C4H8";
  kname[35] = "C6H5";
  kname[36] = "C6H5O";
  kname[37] = "C6H6";
  kname[38] = "CH";
  kname[39] = "CH2";
  kname[40] = "CH2CHOW";
  kname[41] = "CH2CO";
  kname[42] = "CH2HCO";
  kname[43] = "CH2O";
  kname[44] = "CH2OH";
  kname[45] = "CH3";
  kname[46] = "CH3CHO";
  kname[47] = "CH3CO";
  kname[48] = "CH3CO2";
  kname[49] = "CH3CO2H";
  kname[50] = "CH3CO3";
  kname[51] = "CH3CO3H";
  kname[52] = "CH3HCOW";
  kname[53] = "CH3NO";
  kname[54] = "CH3O";
  kname[55] = "CH3O2";
  kname[56] = "CH3O2H";
  kname[57] = "CH3OH";
  kname[58] = "CH4";
  kname[59] = "CN";
  kname[60] = "CNN";
  kname[61] = "CO";
  kname[62] = "CO2";
  kname[63] = "H";
  kname[64] = "H2";
  kname[65] = "H2C4O";
  kname[66] = "H2CN";
  kname[67] = "H2CNO";
  kname[68] = "H2NO";
  kname[69] = "H2O";
  kname[70] = "H2O2";
  kname[71] = "HCCO";
  kname[72] = "HCN";
  kname[73] = "HCNH";
  kname[74] = "HCNN";
  kname[75] = "HCNO";
  kname[76] = "HCO";
  kname[77] = "HNCN";
  kname[78] = "HNCO";
  kname[79] = "HNNO";
  kname[80] = "HNO";
  kname[81] = "HNO3";
  kname[82] = "HNOH";
  kname[83] = "HO2";
  kname[84] = "HOCN";
  kname[85] = "HONO";
  kname[86] = "IC3H7";
  kname[87] = "IC3H7O";
  kname[88] = "IC3H7O2";
  kname[89] = "IC3H7O2H";
  kname[90] = "IC4H3";
  kname[91] = "IC4H5";
  kname[92] = "IC4H7";
  kname[93] = "N";
  kname[94] = "N2";
  kname[95] = "N2H2";
  kname[96] = "N2H3";
  kname[97] = "N2H4";
  kname[98] = "N2O";
  kname[99] = "N2O3";
  kname[100] = "N2O4";
  kname[101] = "NC3H7";
  kname[102] = "NC3H7O";
  kname[103] = "NC3H7O2";
  kname[104] = "NC3H7O2H";
  kname[105] = "NC4H3";
  kname[106] = "NC4H5";
  kname[107] = "NCN";
  kname[108] = "NCO";
  kname[109] = "NH";
  kname[110] = "NH2";
  kname[111] = "NH2OH";
  kname[112] = "NH3";
  kname[113] = "NNH";
  kname[114] = "NO";
  kname[115] = "NO2";
  kname[116] = "NO3";
  kname[117] = "O";
  kname[118] = "O2";
  kname[119] = "O2C3H6OH";
  kname[120] = "OH";
  kname[121] = "PC2H5O";
  kname[122] = "PC3H4";
  kname[123] = "SC2H5O";
  kname[124] = "SC3H5";
  kname[125] = "SCH2";
  kname[126] = "T2C4H8";
  kname[127] = "TC3H5";
  kname[128] = "AR";
}

// compute the sparsity pattern of the chemistry Jacobian
void SPARSITY_INFO(int *nJdata, const int *consP, int NCELLS) {
  amrex::GpuArray<amrex::Real, 16900> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 129> conc = {0.0};
  for (int n = 0; n < 129; n++) {
    conc[n] = 1.0 / 129.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  int nJdata_tmp = 0;
  for (int k = 0; k < 130; k++) {
    for (int l = 0; l < 130; l++) {
      if (Jac[130 * k + l] != 0.0) {
        nJdata_tmp = nJdata_tmp + 1;
      }
    }
  }

  *nJdata = NCELLS * nJdata_tmp;
}

// compute the sparsity pattern of the system Jacobian
void SPARSITY_INFO_SYST(int *nJdata, const int *consP, int NCELLS) {
  amrex::GpuArray<amrex::Real, 16900> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 129> conc = {0.0};
  for (int n = 0; n < 129; n++) {
    conc[n] = 1.0 / 129.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  int nJdata_tmp = 0;
  for (int k = 0; k < 130; k++) {
    for (int l = 0; l < 130; l++) {
      if (k == l) {
        nJdata_tmp = nJdata_tmp + 1;
      } else {
        if (Jac[130 * k + l] != 0.0) {
          nJdata_tmp = nJdata_tmp + 1;
        }
      }
    }
  }

  *nJdata = NCELLS * nJdata_tmp;
}

// compute the sparsity pattern of the simplified (for preconditioning) system
// Jacobian
void SPARSITY_INFO_SYST_SIMPLIFIED(int *nJdata, const int *consP) {
  amrex::GpuArray<amrex::Real, 16900> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 129> conc = {0.0};
  for (int n = 0; n < 129; n++) {
    conc[n] = 1.0 / 129.000000;
  }
  aJacobian_precond(Jac.data(), conc.data(), 1500.0, *consP);

  int nJdata_tmp = 0;
  for (int k = 0; k < 130; k++) {
    for (int l = 0; l < 130; l++) {
      if (k == l) {
        nJdata_tmp = nJdata_tmp + 1;
      } else {
        if (Jac[130 * k + l] != 0.0) {
          nJdata_tmp = nJdata_tmp + 1;
        }
      }
    }
  }

  nJdata[0] = nJdata_tmp;
}

// compute the sparsity pattern of the chemistry Jacobian in CSC format -- base
// 0
void SPARSITY_PREPROC_CSC(int *rowVals, int *colPtrs, const int *consP,
                          int NCELLS) {
  amrex::GpuArray<amrex::Real, 16900> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 129> conc = {0.0};
  for (int n = 0; n < 129; n++) {
    conc[n] = 1.0 / 129.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  colPtrs[0] = 0;
  int nJdata_tmp = 0;
  for (int nc = 0; nc < NCELLS; nc++) {
    int offset_row = nc * 130;
    int offset_col = nc * 130;
    for (int k = 0; k < 130; k++) {
      for (int l = 0; l < 130; l++) {
        if (Jac[130 * k + l] != 0.0) {
          rowVals[nJdata_tmp] = l + offset_row;
          nJdata_tmp = nJdata_tmp + 1;
        }
      }
      colPtrs[offset_col + (k + 1)] = nJdata_tmp;
    }
  }
}

// compute the sparsity pattern of the chemistry Jacobian in CSR format -- base
// 0
void SPARSITY_PREPROC_CSR(int *colVals, int *rowPtrs, const int *consP,
                          int NCELLS, int base) {
  amrex::GpuArray<amrex::Real, 16900> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 129> conc = {0.0};
  for (int n = 0; n < 129; n++) {
    conc[n] = 1.0 / 129.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  if (base == 1) {
    rowPtrs[0] = 1;
    int nJdata_tmp = 1;
    for (int nc = 0; nc < NCELLS; nc++) {
      int offset = nc * 130;
      for (int l = 0; l < 130; l++) {
        for (int k = 0; k < 130; k++) {
          if (Jac[130 * k + l] != 0.0) {
            colVals[nJdata_tmp - 1] = k + 1 + offset;
            nJdata_tmp = nJdata_tmp + 1;
          }
        }
        rowPtrs[offset + (l + 1)] = nJdata_tmp;
      }
    }
  } else {
    rowPtrs[0] = 0;
    int nJdata_tmp = 0;
    for (int nc = 0; nc < NCELLS; nc++) {
      int offset = nc * 130;
      for (int l = 0; l < 130; l++) {
        for (int k = 0; k < 130; k++) {
          if (Jac[130 * k + l] != 0.0) {
            colVals[nJdata_tmp] = k + offset;
            nJdata_tmp = nJdata_tmp + 1;
          }
        }
        rowPtrs[offset + (l + 1)] = nJdata_tmp;
      }
    }
  }
}

// compute the sparsity pattern of the system Jacobian
// CSR format BASE is user choice
void SPARSITY_PREPROC_SYST_CSR(int *colVals, int *rowPtr, const int *consP,
                               int NCELLS, int base) {
  amrex::GpuArray<amrex::Real, 16900> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 129> conc = {0.0};
  for (int n = 0; n < 129; n++) {
    conc[n] = 1.0 / 129.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  if (base == 1) {
    rowPtr[0] = 1;
    int nJdata_tmp = 1;
    for (int nc = 0; nc < NCELLS; nc++) {
      int offset = nc * 130;
      for (int l = 0; l < 130; l++) {
        for (int k = 0; k < 130; k++) {
          if (k == l) {
            colVals[nJdata_tmp - 1] = l + 1 + offset;
            nJdata_tmp = nJdata_tmp + 1;
          } else {
            if (Jac[130 * k + l] != 0.0) {
              colVals[nJdata_tmp - 1] = k + 1 + offset;
              nJdata_tmp = nJdata_tmp + 1;
            }
          }
        }
        rowPtr[offset + (l + 1)] = nJdata_tmp;
      }
    }
  } else {
    rowPtr[0] = 0;
    int nJdata_tmp = 0;
    for (int nc = 0; nc < NCELLS; nc++) {
      int offset = nc * 130;
      for (int l = 0; l < 130; l++) {
        for (int k = 0; k < 130; k++) {
          if (k == l) {
            colVals[nJdata_tmp] = l + offset;
            nJdata_tmp = nJdata_tmp + 1;
          } else {
            if (Jac[130 * k + l] != 0.0) {
              colVals[nJdata_tmp] = k + offset;
              nJdata_tmp = nJdata_tmp + 1;
            }
          }
        }
        rowPtr[offset + (l + 1)] = nJdata_tmp;
      }
    }
  }
}

// compute the sparsity pattern of the simplified (for precond) system Jacobian
// on CPU BASE 0
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(int *rowVals, int *colPtrs, int *indx,
                                          const int *consP) {
  amrex::GpuArray<amrex::Real, 16900> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 129> conc = {0.0};
  for (int n = 0; n < 129; n++) {
    conc[n] = 1.0 / 129.000000;
  }
  aJacobian_precond(Jac.data(), conc.data(), 1500.0, *consP);

  colPtrs[0] = 0;
  int nJdata_tmp = 0;
  for (int k = 0; k < 130; k++) {
    for (int l = 0; l < 130; l++) {
      if (k == l) {
        rowVals[nJdata_tmp] = l;
        indx[nJdata_tmp] = 130 * k + l;
        nJdata_tmp = nJdata_tmp + 1;
      } else {
        if (Jac[130 * k + l] != 0.0) {
          rowVals[nJdata_tmp] = l;
          indx[nJdata_tmp] = 130 * k + l;
          nJdata_tmp = nJdata_tmp + 1;
        }
      }
    }
    colPtrs[k + 1] = nJdata_tmp;
  }
}

// compute the sparsity pattern of the simplified (for precond) system Jacobian
// CSR format BASE is under choice
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(int *colVals, int *rowPtr,
                                          const int *consP, int base) {
  amrex::GpuArray<amrex::Real, 16900> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 129> conc = {0.0};
  for (int n = 0; n < 129; n++) {
    conc[n] = 1.0 / 129.000000;
  }
  aJacobian_precond(Jac.data(), conc.data(), 1500.0, *consP);

  if (base == 1) {
    rowPtr[0] = 1;
    int nJdata_tmp = 1;
    for (int l = 0; l < 130; l++) {
      for (int k = 0; k < 130; k++) {
        if (k == l) {
          colVals[nJdata_tmp - 1] = l + 1;
          nJdata_tmp = nJdata_tmp + 1;
        } else {
          if (Jac[130 * k + l] != 0.0) {
            colVals[nJdata_tmp - 1] = k + 1;
            nJdata_tmp = nJdata_tmp + 1;
          }
        }
      }
      rowPtr[l + 1] = nJdata_tmp;
    }
  } else {
    rowPtr[0] = 0;
    int nJdata_tmp = 0;
    for (int l = 0; l < 130; l++) {
      for (int k = 0; k < 130; k++) {
        if (k == l) {
          colVals[nJdata_tmp] = l;
          nJdata_tmp = nJdata_tmp + 1;
        } else {
          if (Jac[130 * k + l] != 0.0) {
            colVals[nJdata_tmp] = k;
            nJdata_tmp = nJdata_tmp + 1;
          }
        }
      }
      rowPtr[l + 1] = nJdata_tmp;
    }
  }
}
